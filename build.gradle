plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id "org.panteleyev.jpackageplugin" version "1.3.1"
}

apply plugin: "org.panteleyev.jpackageplugin"

group 'com.tinylang'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.1'
}

sourceCompatibility = '9'
targetCompatibility = '9'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.tinylang'
    mainClass = 'com.tinylang.Main'
}

javafx {
    version = '16'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.0')
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'guru.nidi:graphviz-java:0.18.1'
    implementation "com.eclipsesource.j2v8:j2v8_linux_x86_64:4.6.0"

    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

mainClassName = 'com.tinylang.Main'

jar {
    manifest {
        attributes 'Main-Class': "${mainClassName}", 'JD-FX-Version': project.version
    }

    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    from {
        configurations.compileClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

jpackage {
    group = "build"
    dependsOn("build")
    appName = "TINYLanguageParser"
    input = "./build/libs"
    mainJar = "My-TINY-Language-Parser-1.0-SNAPSHOT.jar"
    destination = "./build/publish"

    windows {
        winDirChooser = true
        winShortcut = true
    }

    linux {
        linuxShortcut = true
    }
}
